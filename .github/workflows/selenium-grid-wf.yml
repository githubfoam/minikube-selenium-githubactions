name: "selenium grid 4 on  minikube CI workflow"


on:
  push:
    branches: [ test ]
  # schedule:
  #     - cron:  '0 0 1 * *' ##execution of a task in the first minute of the month 
      
      
jobs:

  ubuntu-latest:
    name: "grid 4 on minikube"
    runs-on: ubuntu-latest
    strategy:
          matrix:
          # By default, minikube installs the latest 
          # stable version of Kubernetes that was available at the time of the minikube release.
          # minikube follows the Kubernetes Version and Version Skew Support Policy, 
          # so we guarantee support for the latest build for the last 3 minor Kubernetes releases
          # Kubernetes versions are expressed as x.y.z, where x is the major version, 
          # y is the minor version, and z is the patch version
          # https://minikube.sigs.k8s.io/docs/handbook/config/#selecting-a-kubernetes-version
          # https://github.com/kubernetes/minikube/releases
            # minikube: [v1.13.1] #OK
            # kubernetes: [v1.19.2] #OK   
            minikube: [v1.25.2]
            # https://github.com/kubernetes/kubernetes/releases/tag/v1.24.1 
            kubernetes: [v1.24.1]     
            # kubernetes: [v1.24.1,v1.23.7,v1.22.10]     
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: "Setup Minikube"
        # https://github.com/manusa/actions-setup-minikube
        uses: manusa/actions-setup-minikube@v2.6.0
        with:
          minikube version: ${{ matrix.minikube }}  
          kubernetes version: ${{ matrix.kubernetes }}            
      - name: "List nodes"
        run: kubectl get nodes 
      - name: "Cluster info"
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}   
      - name: "Deploy Grid 4 on minikube"
        # run: kubectl apply -f k8s-deployment-full-grid-4.0.yaml          
        run: kubectl apply -f app/k8s-deployment-full-grid-4.0.yaml          
      - name: "Expose Router service"
        run: kubectl expose deployment selenium-router-deployment --type=NodePort --port=4444 --target-port=4444                               
      - name: "Wait for Pods to get started"
        run: |
          sleep 10
          podsCount=$(kubectl get pods -l component=selenium-grid-4 | wc -l)
          ctr=0
          while [ $podsCount -lt 6 ]
          do
            ((ctr++))
            if [[ $ctr -eq 30 ]]; then
              echo "Timed out while waiting for Pods to get ready"
              exit 1
            fi
            echo "Waiting for pods to get started...."
            sleep 10
            podsCount=$(kubectl get pods -l component=selenium-grid-4 | wc -l)
          done
          echo "All the pods are started"   
      - name: Waiting for Pods to get ready
        run: |
          echo "Waiting for pods to attain ready state...."
          kubectl wait --for=condition=ready pod -l name=selenium-router --timeout=300s
          kubectl wait --for=condition=ready pod -l name=selenium-distributor --timeout=300s
          kubectl wait --for=condition=ready pod -l name=selenium-event-bus --timeout=300s
          kubectl wait --for=condition=ready pod -l name=selenium-chrome-node --timeout=300s
          kubectl get pods -l component=selenium-grid-4
          echo "All pods are in ready state now"
      - name: Listing all the Grid 4 components
        run: kubectl get all -l component=selenium-grid-4
      - name: Testing the Grid
        run: |
          SELENIUM_GRID_URL=$(minikube service selenium-router-deployment --url)
          echo $SELENIUM_GRID_URL
          python3 $PWD/tests/K8sSmokeTest.py $SELENIUM_GRID_URL                         
